<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mouse</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xvel=0
yvel=0
color=c_white
size=16
next=-1
destroy=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if destroy{
    size/=1.1
    if irandom(60)=59||size&lt;1 instance_destroy()
}
if y&gt;room_height instance_destroy()

if place_meeting(x,y,obj_wall){
    var wall = instance_place(x, y, obj_wall);
    wall.SpillAmount += 0.0002*size;
<<<<<<< HEAD
=======
    wall.SpillColor=merge_colour(wall.SpillColor,color,0.02)
>>>>>>> origin/master
    if !destroy{
        wall.SpillColor=merge_colour(wall.SpillColor,color,0.9998);
        if !place_meeting(x,y-yvel,obj_wall){
            wall.Hor = sign(yvel);
            wall.hasHorPuddle = true;
        }
        else{
            wall.Ver = sign(xvel)
            wall.hasVerPuddle=true
        }
    }
    destroy=true
    yvel*=-0.3
    xvel*=random_range(-1,1)
    
}

yvel+=1.5

x+=xvel
y+=yvel
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_glass">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!destroy) {
if (point_in_rectangle(x,y, other.x - other.sprite_width / 2, other.y - other.sprite_height / 2, other.x + other.sprite_width / 2, other.y - other.sprite_height / 3)) {
other.SpillAmount += 5;
other.curColor=merge_colour(other.curColor,color,0.9998);

instance_destroy();
 }
}
destroy=true;
yvel*=-0.3;
xvel*=random_range(-1,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(color)
draw_circle(x,y,size,false)
if !destroy{
    if instance_exists(next) draw_line_width(x,y,next.x,next.y,size*2)
    else{
        draw_line_width(x-xvel*2,y-yvel*2,x+xvel,y+yvel,size*2)
        draw_circle(x-xvel*2,y-yvel*2,size,false)
        draw_circle(x+xvel,y+yvel,size,false)
    }
} else draw_circle(x,y,size,false)

draw_set_color(c_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
